// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE
import support from "../../agent_sdk/support/entidad";
// END EXTRA CODE

/**
 * Get all QuestionAnswer records by specified query params
 * 
 * Query is a json following the following structure
 * 
 * export interface QuestionAnswerStorageProps {
 *   id?: string
 *   createdAt?: Date
 *   connectionId: string
 *   role: QuestionAnswerRole
 *   signatureRequired: boolean
 *   state: QuestionAnswerState
 *   tags?: CustomQuestionAnswerTags
 *   threadId: string
 * 
 *   questionText: string
 *   questionDetail?: string
 *   validResponses: ValidResponse[]
 * 
 *   response?: string
 * }
 * @param {string} agent_key
 * @param {string} query - json
 * @returns {Promise.<string>}
 */
export async function jsa_aries_agent_modules_drpc_findAllByQuery(agent_key, query) {
	// BEGIN USER CODE
	try{
		if(agent_key==null)return Promise.reject("Invalid agent_key parameter");
		if(query==null)return Promise.reject("Invalid query parameter");
		try{
			query=JSON.parse(query);
		}catch(e){
			return Promise.reject(e.toString());
		}
		let agent=support.cache.get(agent_key);
		if(agent==null)return Promise.reject("Agent not found in cache");
		return Promise.resolve(JSON.stringify(
			await agent.modules.drpc.findAllByQuery(query)
		));
	}catch(e){
		return Promise.reject(e.toString());
	}
	// END USER CODE
}
