// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * Checks type of stringified argument
 * 
 * For example
 *   * '1' : Number
 *   * '"1"' : String
 *   * '{"a":"b"}' : Object
 *   * '[1,2]' : Object
 *   * 'true' : Boolean
 *   * '' : Undefined
 *   * 'abc' : Throws Error
 * @param {string} value
 * @returns {Promise.<string>}
 */
export async function jsa_typeof(value) {
	// BEGIN USER CODE
	try{
		if(value==null)return(Promise.reject("Value null"));
		if(typeof(value)=="undefined")return(Promise.reject("Value undefined"));
		if(typeof(value)!="string")value=JSON.stringify(value);
		if(value=="")return(Promise.resolve("undefined"));
		if(value=="true")return(Promise.resolve("boolean"));
		if(value=="false")return(Promise.resolve("boolean"));
		if(value.length>1){
			if(value[0]=="{"&&value[value.length-1]=="}"){
				let o=JSON.parse(value);
				return(Promise.resolve(typeof(o)));
			}
			if(value[0]=="["&&value[value.length-1]=="]"){
				let o=JSON.parse(value);
				return(Promise.resolve(typeof(o)));
			}
			if(value[0]=='"'&&value[value.length-1]=='"'){
				return(Promise.resolve(typeof(o)));
			}
		}
		if(!isNaN(parseFloat(value)))return(Promise.resolve("boolean"));
		return(Promise.reject("Unknown type"));
	}catch(e){
		throw new Error(e.toString());
	}
	// END USER CODE
}
